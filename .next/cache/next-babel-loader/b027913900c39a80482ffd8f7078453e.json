{"ast":null,"code":"var _jsxFileName = \"/Users/noahmaizels/Desktop/trellolike/components/EditableTitle.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nexport default function EditableTitle({\n  initialTitle\n}) {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(initialTitle);\n  const colors = {\n    darkBlue: 'rgb(23, 43, 77)',\n    grey: '#EBECF0',\n    gray: '#EBECF0',\n    transparent: 'rgba(0,0,0,0)'\n  };\n  const {\n    0: styles,\n    1: setStyles\n  } = useState({\n    backgroundColor: colors.grey,\n    borderColor: colors.grey\n  });\n\n  const onBlur = e => {\n    if (e.target.value.trim() === '') setTitle('');\n    setStyles({\n      backgroundColor: colors.grey,\n      borderColor: colors.transparent\n    });\n  };\n\n  const onFocus = e => {\n    setStyles({\n      backgroundColor: 'white',\n      borderColor: colors.darkBlue\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1572018822\", [styles.borderColor, styles.backgroundColor]]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    onBlur: onBlur,\n    onFocus: onFocus,\n    value: title,\n    placeholder: \"Title\",\n    onChange: e => setTitle(e.target.value),\n    type: \"text\",\n    name: \"title\",\n    className: _JSXStyle.dynamic([[\"1572018822\", [styles.borderColor, styles.backgroundColor]]]) + \" \" + 'editable-input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"1572018822\",\n    dynamic: [styles.borderColor, styles.backgroundColor],\n    __self: this\n  }, `textarea.__jsx-style-dynamic-selector,input.__jsx-style-dynamic-selector{outline:none;padding:2px;padding-left:10px;}input.__jsx-style-dynamic-selector{border:2px solid ${styles.borderColor};border-radius:3px;width:80%;background-color:${styles.backgroundColor};font-size:1.5rem;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub2FobWFpemVscy9EZXNrdG9wL3RyZWxsb2xpa2UvY29tcG9uZW50cy9FZGl0YWJsZVRpdGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFDZ0IsQUFHc0IsQUFLaUMsYUFKbEMsWUFFZixrQkFBQyxHQUdvQixrQkFDUixVQUNvQyw4Q0FDN0IsaUJBQ25CIiwiZmlsZSI6Ii9Vc2Vycy9ub2FobWFpemVscy9EZXNrdG9wL3RyZWxsb2xpa2UvY29tcG9uZW50cy9FZGl0YWJsZVRpdGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVkaXRhYmxlVGl0bGUoe2luaXRpYWxUaXRsZX0pIHtcbiAgY29uc3QgW3RpdGxlLCBzZXRUaXRsZV0gPSB1c2VTdGF0ZShpbml0aWFsVGl0bGUpXG4gIGNvbnN0IGNvbG9ycyA9IHtcbiAgICBkYXJrQmx1ZTogJ3JnYigyMywgNDMsIDc3KScsXG4gICAgZ3JleTogJyNFQkVDRjAnLFxuICAgIGdyYXk6ICcjRUJFQ0YwJyxcbiAgICB0cmFuc3BhcmVudDogJ3JnYmEoMCwwLDAsMCknXG4gIH1cbiAgY29uc3QgW3N0eWxlcywgc2V0U3R5bGVzXSA9IHVzZVN0YXRlKHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5ncmV5LFxuICAgIGJvcmRlckNvbG9yOiBjb2xvcnMuZ3JleSxcbiAgfSlcblxuICBjb25zdCBvbkJsdXIgPSAoZSkgPT4ge1xuICAgIGlmIChlLnRhcmdldC52YWx1ZS50cmltKCkgPT09ICcnKSBzZXRUaXRsZSgnJylcbiAgICBzZXRTdHlsZXMoe2JhY2tncm91bmRDb2xvcjogY29sb3JzLmdyZXksIGJvcmRlckNvbG9yOiBjb2xvcnMudHJhbnNwYXJlbnR9KVxuICB9XG5cbiAgY29uc3Qgb25Gb2N1cyA9IChlKSA9PiB7XG4gICAgc2V0U3R5bGVzKHtiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsIGJvcmRlckNvbG9yOiBjb2xvcnMuZGFya0JsdWV9KVxuICB9XG4gXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICA8aW5wdXRcbiAgICAgIG9uQmx1cj17b25CbHVyfVxuICAgICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICAgIGNsYXNzTmFtZT0nZWRpdGFibGUtaW5wdXQnIFxuICAgICAgdmFsdWU9e3RpdGxlfSBcbiAgICAgIHBsYWNlaG9sZGVyPSdUaXRsZSdcbiAgICAgIG9uQ2hhbmdlPXtlID0+IHNldFRpdGxlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgIHR5cGU9J3RleHQnXG4gICAgICBuYW1lPSd0aXRsZSdcbiAgICA+IFxuICAgIDwvaW5wdXQ+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgdGV4dGFyZWEsIGlucHV0IHsgXG4gICAgICAgIG91dGxpbmU6IG5vbmU7IFxuICAgICAgICBwYWRkaW5nOiAycHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweFxuICAgICAgfVxuICAgICAgaW5wdXQge1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtzdHlsZXMuYmFja2dyb3VuZENvbG9yfTtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICB9XG4gICAgYH08L3N0eWxlPiAgXG4gICAgPC9kaXY+XG4gICk7XG59Il19 */\n/*@ sourceURL=/Users/noahmaizels/Desktop/trellolike/components/EditableTitle.js */`));\n}","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/trellolike/components/EditableTitle.js"],"names":["useState","EditableTitle","initialTitle","title","setTitle","colors","darkBlue","grey","gray","transparent","styles","setStyles","backgroundColor","borderColor","onBlur","e","target","value","trim","onFocus"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAuC;AACpD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,YAAD,CAAlC;AACA,QAAMG,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE,iBADG;AAEbC,IAAAA,IAAI,EAAE,SAFO;AAGbC,IAAAA,IAAI,EAAE,SAHO;AAIbC,IAAAA,WAAW,EAAE;AAJA,GAAf;AAMA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC;AACnCY,IAAAA,eAAe,EAAEP,MAAM,CAACE,IADW;AAEnCM,IAAAA,WAAW,EAAER,MAAM,CAACE;AAFe,GAAD,CAApC;;AAKA,QAAMO,MAAM,GAAIC,CAAD,IAAO;AACpB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,OAA0B,EAA9B,EAAkCd,QAAQ,CAAC,EAAD,CAAR;AAClCO,IAAAA,SAAS,CAAC;AAACC,MAAAA,eAAe,EAAEP,MAAM,CAACE,IAAzB;AAA+BM,MAAAA,WAAW,EAAER,MAAM,CAACI;AAAnD,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMU,OAAO,GAAIJ,CAAD,IAAO;AACrBJ,IAAAA,SAAS,CAAC;AAACC,MAAAA,eAAe,EAAE,OAAlB;AAA2BC,MAAAA,WAAW,EAAER,MAAM,CAACC;AAA/C,KAAD,CAAT;AACD,GAFD;;AAIA,SACE;AAAA,kDAmBwBI,MAAM,CAACG,WAnB/B,EAsBwBH,MAAM,CAACE,eAtB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,MAAM,EAAEE,MADV;AAEE,IAAA,OAAO,EAAEK,OAFX;AAIE,IAAA,KAAK,EAAEhB,KAJT;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,QAAQ,EAAEY,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CANzB;AAOE,IAAA,IAAI,EAAC,MAPP;AAQE,IAAA,IAAI,EAAC,OARP;AAAA,kDAkBwBP,MAAM,CAACG,WAlB/B,EAqBwBH,MAAM,CAACE,eArB/B,aAGY,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAAA;AAAA,cAmBwBF,MAAM,CAACG,WAnB/B,EAsBwBH,MAAM,CAACE,eAtB/B;AAAA;AAAA,iLAmBwBF,MAAM,CAACG,WAnB/B,iDAsBwBH,MAAM,CAACE,eAtB/B;;mFAAA,EADF;AA6BD","sourcesContent":["import { useState } from 'react';\n\nexport default function EditableTitle({initialTitle}) {\n  const [title, setTitle] = useState(initialTitle)\n  const colors = {\n    darkBlue: 'rgb(23, 43, 77)',\n    grey: '#EBECF0',\n    gray: '#EBECF0',\n    transparent: 'rgba(0,0,0,0)'\n  }\n  const [styles, setStyles] = useState({\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n  })\n\n  const onBlur = (e) => {\n    if (e.target.value.trim() === '') setTitle('')\n    setStyles({backgroundColor: colors.grey, borderColor: colors.transparent})\n  }\n\n  const onFocus = (e) => {\n    setStyles({backgroundColor: 'white', borderColor: colors.darkBlue})\n  }\n \n  return (\n    <div>\n    <input\n      onBlur={onBlur}\n      onFocus={onFocus}\n      className='editable-input' \n      value={title} \n      placeholder='Title'\n      onChange={e => setTitle(e.target.value)}\n      type='text'\n      name='title'\n    > \n    </input>\n    <style jsx>{`\n      textarea, input { \n        outline: none; \n        padding: 2px;\n        padding-left: 10px\n      }\n      input {\n        border: 2px solid ${styles.borderColor};\n        border-radius: 3px;\n        width: 80%;\n        background-color: ${styles.backgroundColor};\n        font-size: 1.5rem;\n      }\n    `}</style>  \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}