{"ast":null,"code":"var _jsxFileName = \"/Users/noahmaizels/Desktop/ListKeeper/components/EditableTitle.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport colors from '../helpers/colors';\nexport default function EditableTitle({\n  initialTitle\n}) {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(initialTitle);\n  const {\n    0: styles,\n    1: setStyles\n  } = useState({\n    backgroundColor: colors.grey,\n    borderColor: colors.grey\n  });\n\n  const onBlur = e => {\n    if (e.target.value.trim() === '') setTitle('');\n    setStyles({\n      backgroundColor: colors.grey,\n      borderColor: colors.transparent\n    });\n  };\n\n  const onFocus = e => {\n    setStyles({\n      backgroundColor: 'white',\n      borderColor: colors.darkBlue\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1204462541\", [styles.borderColor]]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    onBlur: onBlur,\n    onFocus: onFocus,\n    value: title,\n    placeholder: \"Title\",\n    onChange: e => setTitle(e.target.value),\n    type: \"text\",\n    name: \"title\",\n    className: _JSXStyle.dynamic([[\"1204462541\", [styles.borderColor]]]) + \" \" + 'editable-input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"1204462541\",\n    dynamic: [styles.borderColor],\n    __self: this\n  }, `textarea.__jsx-style-dynamic-selector,input.__jsx-style-dynamic-selector{outline:none;padding:2px;padding-left:5px;}input.__jsx-style-dynamic-selector{border:2px solid ${styles.borderColor};border-radius:3px;width:80%;background-color:rgba;font-size:1.5rem;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub2FobWFpemVscy9EZXNrdG9wL0xpc3RLZWVwZXIvY29tcG9uZW50cy9FZGl0YWJsZVRpdGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDZ0IsQUFHc0IsQUFLaUMsYUFKbEMsWUFDSyxpQkFDbkIsSUFHb0Isa0JBQ1IsVUFDWSxzQkFDTCxpQkFDbkIiLCJmaWxlIjoiL1VzZXJzL25vYWhtYWl6ZWxzL0Rlc2t0b3AvTGlzdEtlZXBlci9jb21wb25lbnRzL0VkaXRhYmxlVGl0bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjb2xvcnMgZnJvbSAnLi4vaGVscGVycy9jb2xvcnMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVkaXRhYmxlVGl0bGUoe2luaXRpYWxUaXRsZX0pIHtcbiAgY29uc3QgW3RpdGxlLCBzZXRUaXRsZV0gPSB1c2VTdGF0ZShpbml0aWFsVGl0bGUpXG4gIGNvbnN0IFtzdHlsZXMsIHNldFN0eWxlc10gPSB1c2VTdGF0ZSh7XG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleSxcbiAgICBib3JkZXJDb2xvcjogY29sb3JzLmdyZXksXG4gIH0pXG5cbiAgY29uc3Qgb25CbHVyID0gKGUpID0+IHtcbiAgICBpZiAoZS50YXJnZXQudmFsdWUudHJpbSgpID09PSAnJykgc2V0VGl0bGUoJycpXG4gICAgc2V0U3R5bGVzKHtiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5ncmV5LCBib3JkZXJDb2xvcjogY29sb3JzLnRyYW5zcGFyZW50fSlcbiAgfVxuXG4gIGNvbnN0IG9uRm9jdXMgPSAoZSkgPT4ge1xuICAgIHNldFN0eWxlcyh7YmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLCBib3JkZXJDb2xvcjogY29sb3JzLmRhcmtCbHVlfSlcbiAgfVxuIFxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgPGlucHV0XG4gICAgICBvbkJsdXI9e29uQmx1cn1cbiAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICBjbGFzc05hbWU9J2VkaXRhYmxlLWlucHV0JyBcbiAgICAgIHZhbHVlPXt0aXRsZX0gXG4gICAgICBwbGFjZWhvbGRlcj0nVGl0bGUnXG4gICAgICBvbkNoYW5nZT17ZSA9PiBzZXRUaXRsZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICB0eXBlPSd0ZXh0J1xuICAgICAgbmFtZT0ndGl0bGUnXG4gICAgPiBcbiAgICA8L2lucHV0PlxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIHRleHRhcmVhLCBpbnB1dCB7IFxuICAgICAgICBvdXRsaW5lOiBub25lOyBcbiAgICAgICAgcGFkZGluZzogMnB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICAgIH1cbiAgICAgIGlucHV0IHtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmE7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT4gIFxuICAgIDwvZGl2PlxuICApO1xufSJdfQ== */\n/*@ sourceURL=/Users/noahmaizels/Desktop/ListKeeper/components/EditableTitle.js */`));\n}","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/ListKeeper/components/EditableTitle.js"],"names":["useState","colors","EditableTitle","initialTitle","title","setTitle","styles","setStyles","backgroundColor","grey","borderColor","onBlur","e","target","value","trim","transparent","onFocus","darkBlue"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAuC;AACpD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAACG,YAAD,CAAlC;AACA,QAAM;AAAA,OAACG,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,eAAe,EAAEP,MAAM,CAACQ,IADW;AAEnCC,IAAAA,WAAW,EAAET,MAAM,CAACQ;AAFe,GAAD,CAApC;;AAKA,QAAME,MAAM,GAAIC,CAAD,IAAO;AACpB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,OAA0B,EAA9B,EAAkCV,QAAQ,CAAC,EAAD,CAAR;AAClCE,IAAAA,SAAS,CAAC;AAACC,MAAAA,eAAe,EAAEP,MAAM,CAACQ,IAAzB;AAA+BC,MAAAA,WAAW,EAAET,MAAM,CAACe;AAAnD,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAIL,CAAD,IAAO;AACrBL,IAAAA,SAAS,CAAC;AAACC,MAAAA,eAAe,EAAE,OAAlB;AAA2BE,MAAAA,WAAW,EAAET,MAAM,CAACiB;AAA/C,KAAD,CAAT;AACD,GAFD;;AAIA,SACE;AAAA,kDAmBwBZ,MAAM,CAACI,WAnB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,MAAM,EAAEC,MADV;AAEE,IAAA,OAAO,EAAEM,OAFX;AAIE,IAAA,KAAK,EAAEb,KAJT;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CANzB;AAOE,IAAA,IAAI,EAAC,MAPP;AAQE,IAAA,IAAI,EAAC,OARP;AAAA,kDAkBwBR,MAAM,CAACI,WAlB/B,aAGY,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAAA;AAAA,cAmBwBJ,MAAM,CAACI,WAnB/B;AAAA;AAAA,gLAmBwBJ,MAAM,CAACI,WAnB/B;;mFAAA,EADF;AA6BD","sourcesContent":["import { useState } from 'react';\nimport colors from '../helpers/colors'\n\nexport default function EditableTitle({initialTitle}) {\n  const [title, setTitle] = useState(initialTitle)\n  const [styles, setStyles] = useState({\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n  })\n\n  const onBlur = (e) => {\n    if (e.target.value.trim() === '') setTitle('')\n    setStyles({backgroundColor: colors.grey, borderColor: colors.transparent})\n  }\n\n  const onFocus = (e) => {\n    setStyles({backgroundColor: 'white', borderColor: colors.darkBlue})\n  }\n \n  return (\n    <div>\n    <input\n      onBlur={onBlur}\n      onFocus={onFocus}\n      className='editable-input' \n      value={title} \n      placeholder='Title'\n      onChange={e => setTitle(e.target.value)}\n      type='text'\n      name='title'\n    > \n    </input>\n    <style jsx>{`\n      textarea, input { \n        outline: none; \n        padding: 2px;\n        padding-left: 5px;\n      }\n      input {\n        border: 2px solid ${styles.borderColor};\n        border-radius: 3px;\n        width: 80%;\n        background-color: rgba;\n        font-size: 1.5rem;\n      }\n    `}</style>  \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}