{"ast":null,"code":"var _jsxFileName = \"/Users/noahmaizels/Desktop/trellolike/components/Editor.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nimport ReactQuill from 'react-quill'; // ES6\n\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: 'Take notes here...'\n    }; // You can also pass a Quill Delta here\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(value) {\n    this.setState({\n      text: value\n    });\n    console.log;\n  }\n\n  render() {\n    return __jsx(ReactQuill, {\n      value: this.state.text,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/trellolike/components/Editor.js"],"names":["ReactQuill","Editor","React","Component","constructor","props","state","text","handleChange","bind","value","setState","console","log","render"],"mappings":";;;AAAA,OAAO,iCAAP,C,CAA0C;;AAC1C,OAAOA,UAAP,MAAuB,aAAvB,C,CAAsC;;AAEtC,eAAe,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb,CAFiB,CAE2B;;AAC5C,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAEG;AAAR,KAAd;AACAE,IAAAA,OAAO,CAACC,GAAR;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAA9B;AACY,MAAA,QAAQ,EAAE,KAAKC,YAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AAjBiD","sourcesContent":["import 'react-quill/dist/quill.snow.css'; // ES6\nimport ReactQuill from 'react-quill'; // ES6\n\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { text: 'Take notes here...' } // You can also pass a Quill Delta here\n    this.handleChange = this.handleChange.bind(this)\n  }\n \n  handleChange(value) {\n    this.setState({ text: value })\n    console.log\n  }\n \n  render() {\n    return (\n      <ReactQuill value={this.state.text}\n                  onChange={this.handleChange} />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}