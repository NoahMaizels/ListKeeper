{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/noahmaizels/Desktop/trellolike/components/Editor.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nimport ReactQuill from 'react-quill'; // ES6\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComponent, _React$Component);\n\n  function MyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComponent).call(this, props));\n    _this.state = {\n      text: ''\n    }; // You can also pass a Quill Delta here\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.setState({\n        text: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(ReactQuill, {\n        value: this.state.text,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MyComponent;\n}(React.Component);","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/trellolike/components/Editor.js"],"names":["ReactQuill","MyComponent","props","state","text","handleChange","bind","value","setState","React","Component"],"mappings":";;;;;;;;;AAAA,OAAO,iCAAP,C,CAA0C;;AAC1C,OAAOA,UAAP,MAAuB,aAAvB,C,CAAsC;;IAEhCC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb,CAFiB,CAES;;AAC1B,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAHiB;AAIlB;;;;iCAEYC,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEG;AAAR,OAAd;AACD;;;6BAEQ;AACP,aACE,MAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAA9B;AACY,QAAA,QAAQ,EAAE,KAAKC,YAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID;;;;EAhBuBI,KAAK,CAACC,S","sourcesContent":["import 'react-quill/dist/quill.snow.css'; // ES6\nimport ReactQuill from 'react-quill'; // ES6\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { text: '' } // You can also pass a Quill Delta here\n    this.handleChange = this.handleChange.bind(this)\n  }\n \n  handleChange(value) {\n    this.setState({ text: value })\n  }\n \n  render() {\n    return (\n      <ReactQuill value={this.state.text}\n                  onChange={this.handleChange} />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}