{"ast":null,"code":"var _jsxFileName = \"/Users/noahmaizels/Desktop/trellolike/components/List.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport EditableTitle from './EditableTitle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport dynamic from 'next/dynamic';\nimport colors from '../helpers/colors';\nimport { Draggable } from 'react-beautiful-dnd';\nconst Editor = dynamic(() => import('./Editor'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Editor')],\n    modules: ['./Editor']\n  }\n});\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", value => {\n      this.setState({\n        text: value\n      });\n    });\n\n    _defineProperty(this, \"handleEllipsisClick\", event => {\n      if (this.props.openMenu === this.state.menuId) {\n        return;\n      } else {\n        this.props.setOpenMenu(this.state.menuId);\n      }\n    });\n\n    _defineProperty(this, \"handleCloseButtonClick\", event => {\n      if (this.props.openMenu === this.state.menuId) {\n        this.props.setOpenMenu('');\n      }\n    });\n\n    this.state = {\n      menuDisplay: 'hidden',\n      menuId: 'm'.concat(String(Date.now()))\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.openMenu !== prevProps.openMenu) {\n      if (this.props.openMenu === this.state.menuId) {\n        this.setState({\n          menuDisplay: ''\n        });\n      } else {\n        this.setState({\n          menuDisplay: 'hidden'\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(Draggable, {\n      draggableId: this.props.id,\n      index: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, provided => {});\n  }\n\n}","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/trellolike/components/List.js"],"names":["useState","useEffect","EditableTitle","FontAwesomeIcon","dynamic","colors","Draggable","Editor","ssr","List","React","Component","constructor","props","value","setState","text","event","openMenu","state","menuId","setOpenMenu","menuDisplay","concat","String","Date","now","componentDidUpdate","prevProps","render","id","index","provided"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,MAAMC,MAAM,GAAGH,OAAO,CACpB,MAAM,OAAO,UAAP,CADc,EAEpB;AAAEI,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCADa,UACb;AAAA,cADa,UACb;AAAA;AAAA,CAFoB,CAAtB;AAMA,eAAe,MAAMC,IAAN,SAAmBC,KAAK,CAACC,SAAzB,CAAmC;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,0CAmBFC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF;AAAR,OAAd;AACD,KArBiB;;AAAA,iDAsCKG,KAAD,IAAW;AAC/B,UAAI,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,KAAKC,KAAL,CAAWC,MAAvC,EAA+C;AAC7C;AACD,OAFD,MAGK;AACH,aAAKP,KAAL,CAAWQ,WAAX,CAAuB,KAAKF,KAAL,CAAWC,MAAlC;AACD;AACF,KA7CiB;;AAAA,oDA+CQH,KAAD,IAAW;AAClC,UAAI,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,KAAKC,KAAL,CAAWC,MAAvC,EAA8C;AAC5C,aAAKP,KAAL,CAAWQ,WAAX,CAAuB,EAAvB;AACD;AACF,KAnDiB;;AAEhB,SAAKF,KAAL,GAAa;AACXG,MAAAA,WAAW,EAAE,QADF;AAEXF,MAAAA,MAAM,EAAE,IAAIG,MAAJ,CAAWC,MAAM,CAACC,IAAI,CAACC,GAAL,EAAD,CAAjB;AAFG,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAC3B,QAAI,KAAKf,KAAL,CAAWK,QAAX,KAAwBU,SAAS,CAACV,QAAtC,EAAgD;AAC9C,UAAI,KAAKL,KAAL,CAAWK,QAAX,KAAwB,KAAKC,KAAL,CAAWC,MAAvC,EAA+C;AAC7C,aAAKL,QAAL,CAAc;AAACO,UAAAA,WAAW,EAAE;AAAd,SAAd;AACD,OAFD,MAGK;AACH,aAAKP,QAAL,CAAc;AAACO,UAAAA,WAAW,EAAE;AAAd,SAAd;AACD;AACF;AACF;;AAoCDO,EAAAA,MAAM,GAAE;AACN,WACE,MAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWiB,EAD1B;AAEE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWkB,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIC,QAAD,IAAc,CAEd,CANH,CADF;AAUD;;AAlE+C","sourcesContent":["import { useState, useEffect } from 'react'\nimport EditableTitle from './EditableTitle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport dynamic from 'next/dynamic'\nimport colors from '../helpers/colors'\nimport { Draggable } from 'react-beautiful-dnd'\n\nconst Editor = dynamic(\n  () => import('./Editor'),\n  { ssr: false }\n)\n\n\nexport default class List extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      menuDisplay: 'hidden',\n      menuId: 'm'.concat(String(Date.now())),\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (this.props.openMenu !== prevProps.openMenu) {\n      if (this.props.openMenu === this.state.menuId) {\n        this.setState({menuDisplay: ''})\n      }\n      else {\n        this.setState({menuDisplay: 'hidden'})\n      }\n    } \n  }\n\n  handleChange = (value) => {\n    this.setState({ text: value })\n  }\n\n  // drag = (event) => {\n  //   event.dataTransfer.setData('text', event.target.id)\n  // }\n   \n  // onDragOver = (event) => {\n  //   event.preventDefault();\n  // }\n\n  // onDrop = (event) => {\n  //   event.preventDefault();\n  //   const sourceNodeId = event.dataTransfer.getData('text')\n  //   const targetNodeId = event.target.closest('.list').id\n  //   this.props.switchLists(sourceNodeId, targetNodeId)\n  // }\n\n  handleEllipsisClick = (event) => {\n    if (this.props.openMenu === this.state.menuId) {\n      return\n    }\n    else {\n      this.props.setOpenMenu(this.state.menuId)\n    }\n  }\n\n  handleCloseButtonClick = (event) => {\n    if (this.props.openMenu === this.state.menuId){\n      this.props.setOpenMenu('')\n    }\n  }\n  \n  render(){\n    return (\n      <Draggable \n        draggableId={this.props.id}\n        index={this.props.index}\n      >\n        {(provided) => {\n\n        }}\n      </Draggable>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}