{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/noahmaizels/Desktop/trellolike/components/List.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport EditableTitle from './EditableTitle';\nexport default function List(_ref) {\n  var initialTitle = _ref.initialTitle,\n      id = _ref.id,\n      deleteList = _ref.deleteList,\n      switchLists = _ref.switchLists;\n  var editorId = 'x'.concat(String(_Date$now()));\n\n  var _useState = useState({}),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var _useState2 = useState(false),\n      editorLoaded = _useState2[0],\n      setEditorLoaded = _useState2[1];\n\n  useEffect(function () {\n    if (editorLoaded === false) {\n      var _quill = new Quill(\"#\".concat(editorId), {\n        theme: 'snow'\n      });\n\n      setEditorLoaded(true);\n    }\n\n    quill.on('text-change', function () {\n      setContent(quill.getContents());\n      console.log(content);\n    });\n  }, [content]);\n\n  var drag = function drag(event) {\n    event.dataTransfer.setData('text', event.target.id);\n  };\n\n  var _onDragOver = function onDragOver(event) {\n    event.preventDefault();\n  };\n\n  var _onDrop = function onDrop(event) {\n    event.preventDefault();\n    var sourceNodeId = event.dataTransfer.getData('text');\n    var targetNodeId = event.target.closest('.list').id;\n    switchLists(sourceNodeId, targetNodeId);\n  };\n\n  return __jsx(\"div\", {\n    onDrop: function onDrop() {\n      return _onDrop(event);\n    },\n    onDragOver: function onDragOver() {\n      return _onDragOver(event);\n    },\n    onDragStart: function onDragStart() {\n      return drag(event);\n    },\n    draggable: \"true\",\n    id: id,\n    className: \"jsx-1112163390\" + \" \" + \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(EditableTitle, {\n    initialTitle: initialTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-1112163390\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: function onClick(e) {\n      e.preventDefault();\n      deleteList(id);\n    },\n    className: \"jsx-1112163390\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Delete\"), __jsx(\"div\", {\n    id: editorId,\n    className: \"jsx-1112163390\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"jsx-1112163390\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Write notes here....\"), __jsx(\"p\", {\n    className: \"jsx-1112163390\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"br\", {\n    className: \"jsx-1112163390\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))), __jsx(_JSXStyle, {\n    id: \"1112163390\",\n    __self: this\n  }, \".list.jsx-1112163390{vertical-align:top;width:250px;border:1px solid red;display:inline-block;background-color:yellow;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}h2.jsx-1112163390{font-size:18px;}input.jsx-1112163390{width:80%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub2FobWFpemVscy9EZXNrdG9wL3RyZWxsb2xpa2UvY29tcG9uZW50cy9MaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlEa0IsQUFJOEIsQUFRSixBQUdMLFVBQ1osS0FIQSxJQVJjLFlBQ1MscUJBQ0EscUJBQ0csd0JBQ1Ysd0RBQ2hCIiwiZmlsZSI6Ii9Vc2Vycy9ub2FobWFpemVscy9EZXNrdG9wL3RyZWxsb2xpa2UvY29tcG9uZW50cy9MaXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IEVkaXRhYmxlVGl0bGUgZnJvbSAnLi9FZGl0YWJsZVRpdGxlJ1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGlzdCh7IGluaXRpYWxUaXRsZSwgaWQsIGRlbGV0ZUxpc3QsIHN3aXRjaExpc3RzIH0pIHtcblxuICBjb25zdCBlZGl0b3JJZCA9ICd4Jy5jb25jYXQoU3RyaW5nKERhdGUubm93KCkpKVxuICBjb25zdCBbY29udGVudCwgc2V0Q29udGVudF0gPSB1c2VTdGF0ZSh7fSlcbiAgY29uc3QgW2VkaXRvckxvYWRlZCwgc2V0RWRpdG9yTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGVkaXRvckxvYWRlZCA9PT0gZmFsc2UpIHtcbiAgICAgIGNvbnN0ICBxdWlsbCA9IG5ldyBRdWlsbChgIyR7ZWRpdG9ySWR9YCwge1xuICAgICAgICB0aGVtZTogJ3Nub3cnXG4gICAgICB9KVxuICAgICAgc2V0RWRpdG9yTG9hZGVkKHRydWUpXG4gICAgfVxuICAgIFxuICAgIHF1aWxsLm9uKCd0ZXh0LWNoYW5nZScsICgpID0+IHtcbiAgICAgIHNldENvbnRlbnQocXVpbGwuZ2V0Q29udGVudHMoKSlcbiAgICAgIGNvbnNvbGUubG9nKGNvbnRlbnQpXG4gICAgfSk7XG4gIH0sIFtjb250ZW50XSk7XG5cblxuXG4gIGNvbnN0IGRyYWcgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5kYXRhVHJhbnNmZXIuc2V0RGF0YSgndGV4dCcsIGV2ZW50LnRhcmdldC5pZClcbiAgfVxuICAgXG4gIGNvbnN0IG9uRHJhZ092ZXIgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG5cbiAgY29uc3Qgb25Ecm9wID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBzb3VyY2VOb2RlSWQgPSBldmVudC5kYXRhVHJhbnNmZXIuZ2V0RGF0YSgndGV4dCcpXG4gICAgY29uc3QgdGFyZ2V0Tm9kZUlkID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5saXN0JykuaWRcbiAgICBzd2l0Y2hMaXN0cyhzb3VyY2VOb2RlSWQsIHRhcmdldE5vZGVJZClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBvbkRyb3A9eygpID0+IG9uRHJvcChldmVudCl9IG9uRHJhZ092ZXI9eygpID0+IG9uRHJhZ092ZXIoZXZlbnQpfSBvbkRyYWdTdGFydD17KCkgPT4gZHJhZyhldmVudCl9IGRyYWdnYWJsZT0ndHJ1ZScgaWQ9e2lkfSBjbGFzc05hbWU9XCJsaXN0XCI+XG4gICAgICA8RWRpdGFibGVUaXRsZSBpbml0aWFsVGl0bGU9e2luaXRpYWxUaXRsZX0vPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoZSkgPT4ge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgIGRlbGV0ZUxpc3QoaWQpXG4gICAgICAgIH19PlxuICAgICAgICAgIERlbGV0ZVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGRpdiBpZD17ZWRpdG9ySWR9PlxuICAgICAgICAgIDxwPldyaXRlIG5vdGVzIGhlcmUuLi4uPC9wPlxuICAgICAgICAgIDxwPjxici8+PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBcbiAgICAgICAgLmxpc3Qge1xuICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICAgICAgd2lkdGg6IDI1MHB4O1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xuICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgICAgICB9XG4gICAgICAgIGgyIHtcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgIH1cbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn0iXX0= */\\n/*@ sourceURL=/Users/noahmaizels/Desktop/trellolike/components/List.js */\"));\n}","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/trellolike/components/List.js"],"names":["useState","useEffect","EditableTitle","List","initialTitle","id","deleteList","switchLists","editorId","concat","String","content","setContent","editorLoaded","setEditorLoaded","quill","Quill","theme","on","getContents","console","log","drag","event","dataTransfer","setData","target","onDragOver","preventDefault","onDrop","sourceNodeId","getData","targetNodeId","closest","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport EditableTitle from './EditableTitle'\n\n\n\nexport default function List({ initialTitle, id, deleteList, switchLists }) {\n\n  const editorId = 'x'.concat(String(Date.now()))\n  const [content, setContent] = useState({})\n  const [editorLoaded, setEditorLoaded] = useState(false)\n\n  useEffect(() => {\n    if (editorLoaded === false) {\n      const  quill = new Quill(`#${editorId}`, {\n        theme: 'snow'\n      })\n      setEditorLoaded(true)\n    }\n    \n    quill.on('text-change', () => {\n      setContent(quill.getContents())\n      console.log(content)\n    });\n  }, [content]);\n\n\n\n  const drag = (event) => {\n    event.dataTransfer.setData('text', event.target.id)\n  }\n   \n  const onDragOver = (event) => {\n    event.preventDefault();\n  }\n\n  const onDrop = (event) => {\n    event.preventDefault();\n    const sourceNodeId = event.dataTransfer.getData('text')\n    const targetNodeId = event.target.closest('.list').id\n    switchLists(sourceNodeId, targetNodeId)\n  }\n\n  return (\n    <div onDrop={() => onDrop(event)} onDragOver={() => onDragOver(event)} onDragStart={() => drag(event)} draggable='true' id={id} className=\"list\">\n      <EditableTitle initialTitle={initialTitle}/>\n      <div>\n        <button onClick={(e) => {\n          e.preventDefault()\n          deleteList(id)\n        }}>\n          Delete\n        </button>\n        <div id={editorId}>\n          <p>Write notes here....</p>\n          <p><br/></p>\n        </div>\n      </div>\n      <style jsx>{`\n        \n        .list {\n          vertical-align: top;\n          width: 250px;\n          border: 1px solid red;\n          display: inline-block;\n          background-color: yellow;\n          flex-shrink: 0;\n        }\n        h2 {\n          font-size: 18px;\n        }\n        input {\n          width: 80%;\n        }\n      `}</style>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}