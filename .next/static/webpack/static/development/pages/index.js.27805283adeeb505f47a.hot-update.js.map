{"version":3,"file":"static/webpack/static/development/pages/index.js.27805283adeeb505f47a.hot-update.js","sources":["webpack:///./components/List.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport EditableTitle from './EditableTitle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import EditorJS from '@editorjs/editorjs';\n\n\n\n\nexport default class List extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      content: null,\n      editor: null,\n      menuDisplay: 'hidden',\n    }\n  }\n\n  componentDidMount(){\n    const  quill = new Quill(`#${this.props.editorId}`, {\n      theme: 'snow'\n    })\n\n    quill.on('text-change', () => {\n      this.setState({ content: quill.getContents()})\n      // console.log(quill.getContents())\n    });\n  }\n\n  drag = (event) => {\n    event.dataTransfer.setData('text', event.target.id)\n  }\n   \n  onDragOver = (event) => {\n    event.preventDefault();\n  }\n\n  onDrop = (event) => {\n    event.preventDefault();\n    const sourceNodeId = event.dataTransfer.getData('text')\n    const targetNodeId = event.target.closest('.list').id\n    this.props.switchLists(sourceNodeId, targetNodeId)\n  }\n\n  handleEllipsisClick = (event) => {\n    this.setState({menuDisplay: ''})\n    this.props.setOpenMenu(this.props.menuId)\n    console.log(this.props.openMenu)\n  }\n\n  handleCloseButtonClick = (event) => {\n    this.setState({menuDisplay: 'hidden'})\n  }\n  \n  render(){\n    return (\n      <div onDrop={() => this.onDrop(event)} onDragOver={() => this.onDragOver(event)} onDragStart={() => this.drag(event)} draggable='true' id={this.props.id} className=\"list\">\n        <div className='list-heading'>\n          <EditableTitle initialTitle={this.props.initialTitle}/>\n          <div className='ellipsis'>\n            <FontAwesomeIcon onClick={this.handleEllipsisClick} icon='ellipsis-h' />\n            <div className={`menu ${this.state.menuDisplay}`}> \n              <div className='close-button'>\n                <FontAwesomeIcon onClick={this.handleCloseButtonClick}  icon='window-close' />\n              </div>\n              <div>\n              <button className='delete-button' onClick={(e) => {\n                e.preventDefault()\n                this.props.deleteList(this.props.id)\n              }}>\n                Delete Note\n              </button>\n              </div>\n            </div>\n          </div>\n        </div>        \n        <div>\n          <div id={this.props.editorId}>\n            <p>Write notes here....</p>\n            <p><br/></p>\n          </div>\n        </div>\n        <style jsx>{`\n          .delete-button {\n            border: 1px solid black;\n            margin-left: 30px;\n            width: 80px;\n          }\n          .close-button {\n            text-align: right;\n          }\n          .hidden {\n            display: none;\n          }\n          .menu {\n            border: 1px solid black;\n            border-radius: 5px;\n            background-color: white;\n            height: 200px;\n            width: 180px;\n            position: absolute;\n            z-index: 10;\n          }\n          .ellipsis {\n           padding-right: 3px;\n          }\n          .list-heading {\n            display: flex;\n            justify-content: space-between;\n            font-size: 1rem;\n          }\n          .list {\n            vertical-align: top;\n            width: 250px;\n            border-radius: 5px;\n            padding: 5px;\n            display: inline-block;\n            background-color: #EBECF0;\n            flex-shrink: 0;\n            margin-right: 7px;\n          }\n          h2 {\n            font-size: 18px;\n          }\n          input {\n            width: 80%;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAKA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlCA;AAoCA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAxCA;AA0CA;AAAA;AAAA;AACA;AACA;AA1CA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AA2BA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAAA;AAAA;AA0EA;;;;AA3HA;AACA;;;;;A","sourceRoot":""}